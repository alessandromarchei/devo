expweek: 2025-mm-dd
name: debug

# dataset
datapath: /usr/scratch/badile43/amarchei/TartanEvent/

sequence_mode: "sequential"  # "covisibility_off" or "fw_mode" or "sequential"


# options
evs: True
eval: True
ddp: False
profiler: False
gpu_num: 1
port: 12348
e2vid: False
profiler: False

# checkpoints
checkpoint:
fgraph_pickle: /home/amarchei/Desktop/repos/DEVO/train_full_dataset/TartanAirEVS.pickle
train_split: splits/tartan/tartan_full_train.txt
val_split: splits/mvsec/mvsec_val.txt     #execute every scene on this file every UPGRADE_CHECKPOINT_STEP
eval_step: 1250         #save checkpoint every N iterations. ALSO EVALUATION
tensorboard_update_step: 50         #push to tensorboard every N iterations, for visualization
first_gt_poses: 10000       #up until this step, LOSS: FLOW LOSS, after LOSS: POSE + FLOW + SCORE
checkpoint_step: 1250       #load checkpoint every N iterations, for evaluation
# preprocessing / augmentation
# TODO: introduce options
patches_per_image: 80
patch_selector: "scorer"
norm: "std2"
randaug: True


# training 1options
batch: 1
iters: 18
steps: 240000  #normally 240000, it stops at that, dont care about stopping at half of sequence
lr: 0.00008
clip: 10
n_frames: 15   #15 by default
scale: 0.5     #resolution scale. 0.25 --> 160x120, 0.5 --> 320x240, 1.0 --> 640x480
square: False  #non uniform scaling, make the image square, taking the WIDTH as reference
precomputed_inputs: True  #use precomputed inputs, if False, it will compute the inputs on the fly
event_representation: "voxel"

# loss
pose_weight: 10.0
flow_weight: 0.1
scores_weight: 0.05



#ARCHITECTURE
patchifier_model: "original"   #original, mksmall, mkbig
ctx_feat_dim: 384
match_feat_dim: 128
dim: 32

#CORRELATION BLOCK
use_pyramid: True     #BASELINE : True : use both the large and small matching features stacked to form a pyramid, FALSE : use only the LARGE matching feature (1/4 resolution)

#UPDATE BLOCK
use_softagg: True     #BASELINE : True : use soft-aggregation, FALSE : use hard-aggregation
use_tempconv: True     #BASELINE : True : use temporal convolution, FALSE : use 3D convolution